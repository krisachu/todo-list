{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js\";\nimport React from \"react\"; // ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask,\n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä)\n\nconst Tasks = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, props.tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => props.switchStateOfTask(task.id),\n      type: \"checkbox\",\n      className: \"testi-css-1\",\n      checked: task.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: task.id,\n      value: task.content,\n      className: `testi-css-2${task.done ? \" strikethrough\" : \"\"}`,\n      onChange: () => props.editTask(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.removeTask(task.id),\n      type: \"button\",\n      className: \"delete-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, \"X\"));\n  })));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js"],"names":["React","Tasks","props","tasks","map","task","id","switchStateOfTask","done","content","editTask","removeTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,wBACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,QAAQ,EAAE,MAAMJ,KAAK,CAACK,iBAAN,CAAwBF,IAAI,CAACC,EAA7B,CADlB;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,OAAO,EAAED,IAAI,CAACG,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAEH,IAAI,CAACC,EAFX;AAGE,MAAA,KAAK,EAAED,IAAI,CAACI,OAHd;AAIE,MAAA,SAAS,EAAG,cAAaJ,IAAI,CAACG,IAAL,GAAY,gBAAZ,GAA+B,EAAG,EAJ7D;AAKE,MAAA,QAAQ,EAAE,MAAMN,KAAK,CAACQ,QAAN,CAAeL,IAAI,CAACC,EAApB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAcE;AACE,MAAA,OAAO,EAAE,MAAMJ,KAAK,CAACS,UAAN,CAAiBN,IAAI,CAACC,EAAtB,CADjB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdF,CADF;AAwBD,GAzBA,CADH,CADF,CADF;AAgCD,CAjCD;;AAmCA,eAAeL,KAAf","sourcesContent":["import React from \"react\";\n\n// ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask,\n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä)\n\nconst Tasks = (props) => {\n  return (\n    <div className=\"todo-items\">\n      <ul>\n        {props.tasks.map((task) => {\n          return (\n            <li key={task.id}>\n              <input\n                onChange={() => props.switchStateOfTask(task.id)}\n                type=\"checkbox\"\n                className=\"testi-css-1\"\n                checked={task.done}\n              />\n              <input\n                type=\"text\"\n                id={task.id}\n                value={task.content}\n                className={`testi-css-2${task.done ? \" strikethrough\" : \"\"}`}\n                onChange={() => props.editTask(task.id)}\n              />\n              <button\n                onClick={() => props.removeTask(task.id)}\n                type=\"button\"\n                className=\"delete-button\"\n              >\n                X\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}