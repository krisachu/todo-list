{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js\";\nimport React from 'react'; // ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask, \n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä) \n\nconst Tasks = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, props.tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: () => props.switchStateOfTask(task.id),\n    type: \"checkbox\",\n    className: \"testi-css-1\",\n    checked: task.done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: task.id,\n    value: task.content,\n    className: 'testi-css-2' + task.done ? ' strikethrough' : '',\n    onChange: () => props.editTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.removeTask(task.id),\n    type: \"button\",\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, \"X\")))));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js"],"names":["React","Tasks","props","tasks","map","task","id","switchStateOfTask","done","content","editTask","removeTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBACjB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,QAAQ,EAAE,MAAMJ,KAAK,CAACK,iBAAN,CAAwBF,IAAI,CAACC,EAA7B,CAAvB;AAAyD,IAAA,IAAI,EAAC,UAA9D;AAAyE,IAAA,SAAS,EAAC,aAAnF;AAAiG,IAAA,OAAO,EAAED,IAAI,CAACG,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAEH,IAAI,CAACC,EAA5B;AAAgC,IAAA,KAAK,EAAED,IAAI,CAACI,OAA5C;AAAqD,IAAA,SAAS,EAAE,gBAAgBJ,IAAI,CAACG,IAArB,GAA4B,gBAA5B,GAA+C,EAA/G;AACA,IAAA,QAAQ,EAAE,MAAMN,KAAK,CAACQ,QAAN,CAAeL,IAAI,CAACC,EAApB,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMJ,KAAK,CAACS,UAAN,CAAiBN,IAAI,CAACC,EAAtB,CAAvB;AAAkD,IAAA,IAAI,EAAC,QAAvD;AAAgE,IAAA,SAAS,EAAC,eAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADH,CADL,CADJ,CADJ;AAcH,CAhBD;;AAkBA,eAAeL,KAAf","sourcesContent":["import React from 'react'\n\n// ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask, \n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä) \n\nconst Tasks = (props) => {\n\n    return (\n        <div className=\"todo-items\">\n            <ul>\n                {props.tasks.map(task =>\n                    <li key={task.id}>\n                        <input onChange={() => props.switchStateOfTask(task.id)} type=\"checkbox\" className=\"testi-css-1\" checked={task.done} />\n                        <input type=\"text\" id={task.id} value={task.content} className={'testi-css-2' + task.done ? ' strikethrough' : ''}\n                        onChange={() => props.editTask(task.id)}/>\n                        <button onClick={() => props.removeTask(task.id)} type=\"button\" className=\"delete-button\">X</button>\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Tasks\n\n\n"]},"metadata":{},"sourceType":"module"}