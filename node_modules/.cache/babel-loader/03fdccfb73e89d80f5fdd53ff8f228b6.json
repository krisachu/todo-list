{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js\";\nimport React from 'react'; // ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask,\n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä)\n\nconst Tasks = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, props.tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => props.switchStateOfTask(task.id),\n      type: \"checkbox\",\n      className: \"testi-css-1\",\n      checked: task.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: task.id,\n      className: `testi-css-2${task.done ? ' strikethrough' : ''}`,\n      onFocus: () => props.onEditStart(task.id),\n      onChange: event => props.onEditTask(event, task),\n      onBlur: () => props.onEditEnd(),\n      value: props.editableTask === task.id ? props.editableTask.content : task.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.removeTask(task.id),\n      type: \"button\",\n      className: \"delete-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, \"X\"));\n  })));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/kristina/Coding/portfolio/todo-list/src/components/Tasks.js"],"names":["React","Tasks","props","tasks","map","task","id","switchStateOfTask","done","onEditStart","event","onEditTask","onEditEnd","editableTask","content","removeTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACvB,wBACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,QAAQ,EAAE,MACNJ,KAAK,CAACK,iBAAN,CAAwBF,IAAI,CAACC,EAA7B,CAFR;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,SAAS,EAAC,aALd;AAMI,MAAA,OAAO,EAAED,IAAI,CAACG,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAEH,IAAI,CAACC,EAFb;AAGI,MAAA,SAAS,EAAG,cACRD,IAAI,CAACG,IAAL,GAAY,gBAAZ,GAA+B,EAClC,EALL;AAMI,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACO,WAAN,CAAkBJ,IAAI,CAACC,EAAvB,CANnB;AAOI,MAAA,QAAQ,EAAEI,KAAK,IAAIR,KAAK,CAACS,UAAN,CAAiBD,KAAjB,EAAwBL,IAAxB,CAPvB;AAQI,MAAA,MAAM,EAAE,MAAMH,KAAK,CAACU,SAAN,EARlB;AASI,MAAA,KAAK,EAAEV,KAAK,CAACW,YAAN,KAAuBR,IAAI,CAACC,EAA5B,GAAiCJ,KAAK,CAACW,YAAN,CAAmBC,OAApD,GAA8DT,IAAI,CAACS,OAT9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAoBI;AACI,MAAA,OAAO,EAAE,MAAMZ,KAAK,CAACa,UAAN,CAAiBV,IAAI,CAACC,EAAtB,CADnB;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WApBJ,CADJ;AA8BH,GA/BA,CADL,CADJ,CADJ;AAsCH,CAvCD;;AAyCA,eAAeL,KAAf","sourcesContent":["import React from 'react';\n\n// ruksimalla boksia (input onChange) käynnistetään funktio switchStateOfTask,\n// jolle annetaan id (joka tulee ylläolevan mapin kautta)\n// checked= on sen hetkinen arvo (true/false), joka näkyy reaaliajassa\n// jos spanissa task.done on true (eli taski on tehty) -> tällöin className (strikethrough) aktivoituu css:ssä,\n// jolloin yliviivataan taski. Jos false, silloin '' (tyhjä)\n\nconst Tasks = (props) => {\n    return (\n        <div className=\"todo-items\">\n            <ul>\n                {props.tasks.map((task) => {\n                    return (\n                        <li key={task.id}>\n                            <input\n                                onChange={() =>\n                                    props.switchStateOfTask(task.id)\n                                }\n                                type=\"checkbox\"\n                                className=\"testi-css-1\"\n                                checked={task.done}\n                            />\n                            <input\n                                type=\"text\"\n                                id={task.id}\n                                className={`testi-css-2${\n                                    task.done ? ' strikethrough' : ''\n                                }`}\n                                onFocus={() => props.onEditStart(task.id)}\n                                onChange={event => props.onEditTask(event, task)}\n                                onBlur={() => props.onEditEnd()}\n                                value={props.editableTask === task.id ? props.editableTask.content : task.content }\n                            />\n                            <button\n                                onClick={() => props.removeTask(task.id)}\n                                type=\"button\"\n                                className=\"delete-button\"\n                            >\n                                X\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}